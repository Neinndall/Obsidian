@using Microsoft.WindowsAPICodePack.Dialogs;
@using Obsidian.Data;
@using PhotinoNET;

<MudDialog DisableSidePadding>
    <TitleContent>
        <MudStack Row AlignItems="AlignItems.Center">
            <MudIcon Icon="@CustomIcons.Material.FolderWrench" Size="Size.Large" Color="Color.Primary" />
            <MudText Typo="Typo.h5">
                Configure
            </MudText>
            <MudSpacer />
            <MudButton OnClick="@Skip">
                Skip
            </MudButton>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="width: 40vw; overflow-y: scroll;">
            <MudStack Spacing="2">
                <DirectoryInput Label="League of Legends directory"
                                Directory="@Config.GameDataDirectory"
                                OnClearDirectory="@(_ => Config.GameDataDirectory = null)"
                                OnSelectDirectory="SelectGameDataDirectory">
                    <DescriptionContent>
                        It looks like this is your first time running Obsidian, please select your League of Legends directory.
                    </DescriptionContent>
                </DirectoryInput>
                @if (string.IsNullOrEmpty(Config.GameDataDirectory) is false)
                {
                    <MudButton Class="mx-auto mt-2"
                           Variant="Variant.Filled" Color="Color.Primary"
                           OnClick="@(_ => Dialog.Close())">
                        Ok
                    </MudButton>
                }
            </MudStack>

        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [Inject] public PhotinoWindow Window { get; set; }
    [Inject] public Config Config { get; set; }

    [CascadingParameter] MudDialogInstance Dialog { get; set; }

    private DialogOptions _options = new()
        {
            CloseButton = false,
            CloseOnEscapeKey = false,
            DisableBackdropClick = true,
            MaxWidth = MaxWidth.Large
        };

    public void SelectGameDataDirectory()
    {
        CommonOpenFileDialog dialog = new() { IsFolderPicker = true };

        if (dialog.ShowDialog(this.Window.WindowHandle) is CommonFileDialogResult.Ok)
            this.Config.GameDataDirectory = dialog.FileName;
    }

    private void Skip()
    {
        this.Config.DoNotRequireGameDirectory = true;
        this.Dialog.Close();
    }

    protected override void OnInitialized()
    {
        this.Dialog.SetOptions(this._options);
        base.OnInitialized();
    }
}
